---
# Builds and Releases packages for eBPF to be consumed by Netdata Agent
name: CD
on:
  push:
    tags:
      - 'v*'
concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build-artifacts:
    name: Build Artifacts
    strategy:
      matrix:
        kernel_version:
          - '5.15.19'
        libc:
          - glibc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Run build.sh
        run: |
          os=core
          ./build.sh ${{ matrix.kernel_version }} ${{ matrix.libc }} "${os}"
      - name: List Artifacts
        run: |
          ls -lah artifacts
          test -f artifacts/netdata_ebpf-co-re-*.tar.xz
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2.3.1
        if: success()
        with:
          name: artifacts-${{ matrix.kernel_version }}-${{ matrix.libc }}
          path: artifacts

  create-release:
    name: Create Release
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Set release_tag
        run: |
          echo "RELEASE_TAG=${GITHUB_REF##*/}" >> ${GITHUB_ENV}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          # TODO: Generate ChagneLog here for Release Description
          body: |
            # Release ${{ env.RELEASE_TAG }}

            <!--- Summary of Release -->

            ## Release Notes

            <!--- Release Notes -->
          draft: true
          prerelease: false
      - name: Write upload_url
        run: |
          mkdir -p upload_url
          echo '${{ steps.create_release.outputs.upload_url }}' > upload_url/upload_url.txt
      - name: Upload upload_url
        uses: actions/upload-artifact@v2.3.1
        with:
          name: upload_url
          path: upload_url

  package-upload:
    name: Package & Upload
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Download upload_url
        uses: actions/download-artifact@v2.1.0
        with:
          name: upload_url
      - name: Set upload_url
        run: |
          echo "UPLOAD_URL=$(cat upload_url/upload_url.txt)" >> ${GITHUB_ENV}
      - name: Set release_tag
        run: |
          echo "RELEASE_TAG=${GITHUB_REF##*/}" >> ${GITHUB_ENV}
      - name: Download all Artifacts
        uses: actions/download-artifact@v2.1.0
        with:
          path: artifacts
      - name: Display Artifacts
        run: ls -R
        working-directory: artifacts
      - name: Package Release Assets
        run: |
          mkdir -p "packages/netdata-ebpf-co-re-glibc-${RELEASE_TAG}"
          for dir in artifacts/artifacts-*-glibc; do
              tar -C "packages/netdata-ebpf-co-re-glibc-${RELEASE_TAG}" -xvf "${dir}/*.tar.xz"
          done
          tar -C "packages/netdata-ebpf-co-re-glibc-${RELEASE_TAG}" -Jcvf "packages/netdata-ebpf-co-re-glibc-${RELEASE_TAG}.tar.xz" ./
          cd packages && sha256sum *.tar.xz > sha256sums.txt
      - name: Display Release Assets
        run: ls -R
        working-directory: packages
      - name: Upload Release Assets (glibc)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: packages/netdata-ebpf-co-re-glibc-${{ env.RELEASE_TAG }}.tar.xz
          asset_name: netdata-ebpf-co-re-glibc-${{ env.RELEASE_TAG }}.tar.xz
          asset_content_type: application/x-gtar
      - name: Upload Release Assets (sha256sums)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: packages/sha256sums.txt
          asset_name: sha256sums.txt
          asset_content_type: text/plain
